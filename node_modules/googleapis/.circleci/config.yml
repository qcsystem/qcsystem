---
# "Include" for unit tests definition.
unit_tests: &unit_tests
  steps:
    - checkout
    - run:
        name: Install modules and dependencies.
        command: npm install
    - run:
        name: Run unit tests.
        command: npm test
    - run:
        name: Submit coverage data to codecov.
        command: node_modules/.bin/codecov
        when: always

version: 2.0
workflows:
  version: 2
  tests:
    jobs:
      - node4:
          filters:
            tags:
              only: /.*/
      - node6:
          filters:
            tags:
              only: /.*/
      - node8:
          filters:
            tags:
              only: /.*/
      - node9:
          filters:
            tags:
              only: /.*/
      - publish_npm:
          requires:
            - node4
            - node6
            - node8
            - node9
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[\d.]+$/

jobs:
  node4:
    docker:
      - image: node:4
        user: node
    steps:
      - checkout
      - run:
          name: Install modules and dependencies.
          command: npm install --unsafe-perm
      - run:
          name: Run unit tests.
          command: npm test
      - run:
          name: Submit coverage data to codecov.
          command: node_modules/.bin/codecov
          when: always
  node6:
    docker:
      - image: node:6
        user: node
    <<: *unit_tests
  node8:
    docker:
      - image: node:8
        user: node
    <<: *unit_tests
  node9:
    docker:
      - image: node:9
        user: node
    <<: *unit_tests

  publish_npm:
    docker:
      - image: node:8
        user: node
    steps:
      - checkout
      - run:
          name: Install modules and dependencies.
          command: npm install --unsafe-perm
      - run:
          name: Set NPM authentication.
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      - run:
         name: Publish the module to npm.
         command: npm publish --access=public
